<?php

/**
 * BaseEdt
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom
 * @property string $description
 * @property string $ade_project_id
 * @property string $liens_utiles
 * @property integer $adeserver_id
 * @property string $id_piano_day
 * @property integer $start_timestamp
 * @property integer $width
 * @property integer $height
 * @property string $display_mode
 * @property string $display_conf_id
 * @property integer $piwik_site_id
 * @property Doctrine_Collection $Categories
 * @property Adeserver $Adeserver
 * 
 * @method string              getNom()             Returns the current record's "nom" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method string              getAdeProjectId()    Returns the current record's "ade_project_id" value
 * @method string              getLiensUtiles()     Returns the current record's "liens_utiles" value
 * @method integer             getAdeserverId()     Returns the current record's "adeserver_id" value
 * @method string              getIdPianoDay()      Returns the current record's "id_piano_day" value
 * @method integer             getStartTimestamp()  Returns the current record's "start_timestamp" value
 * @method integer             getWidth()           Returns the current record's "width" value
 * @method integer             getHeight()          Returns the current record's "height" value
 * @method string              getDisplayMode()     Returns the current record's "display_mode" value
 * @method string              getDisplayConfId()   Returns the current record's "display_conf_id" value
 * @method integer             getPiwikSiteId()     Returns the current record's "piwik_site_id" value
 * @method Doctrine_Collection getCategories()      Returns the current record's "Categories" collection
 * @method Adeserver           getAdeserver()       Returns the current record's "Adeserver" value
 * @method Edt                 setNom()             Sets the current record's "nom" value
 * @method Edt                 setDescription()     Sets the current record's "description" value
 * @method Edt                 setAdeProjectId()    Sets the current record's "ade_project_id" value
 * @method Edt                 setLiensUtiles()     Sets the current record's "liens_utiles" value
 * @method Edt                 setAdeserverId()     Sets the current record's "adeserver_id" value
 * @method Edt                 setIdPianoDay()      Sets the current record's "id_piano_day" value
 * @method Edt                 setStartTimestamp()  Sets the current record's "start_timestamp" value
 * @method Edt                 setWidth()           Sets the current record's "width" value
 * @method Edt                 setHeight()          Sets the current record's "height" value
 * @method Edt                 setDisplayMode()     Sets the current record's "display_mode" value
 * @method Edt                 setDisplayConfId()   Sets the current record's "display_conf_id" value
 * @method Edt                 setPiwikSiteId()     Sets the current record's "piwik_site_id" value
 * @method Edt                 setCategories()      Sets the current record's "Categories" collection
 * @method Edt                 setAdeserver()       Sets the current record's "Adeserver" value
 * 
 * @package    edt
 * @subpackage model
 * @author     Théophile Helleboid, Michael Muré
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEdt extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('edt');
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('ade_project_id', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('liens_utiles', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('adeserver_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('id_piano_day', 'string', 255, array(
             'type' => 'string',
             'default' => '0,1,2,3,4',
             'length' => 255,
             ));
        $this->hasColumn('start_timestamp', 'integer', null, array(
             'type' => 'integer',
             'default' => 1283119200,
             ));
        $this->hasColumn('width', 'integer', null, array(
             'type' => 'integer',
             'default' => 800,
             ));
        $this->hasColumn('height', 'integer', null, array(
             'type' => 'integer',
             'default' => 600,
             ));
        $this->hasColumn('display_mode', 'string', 255, array(
             'type' => 'string',
             'default' => '1057855',
             'length' => 255,
             ));
        $this->hasColumn('display_conf_id', 'string', 255, array(
             'type' => 'string',
             'default' => '8',
             'length' => 255,
             ));
        $this->hasColumn('piwik_site_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Categorie as Categories', array(
             'local' => 'id',
             'foreign' => 'edt_id'));

        $this->hasOne('Adeserver', array(
             'local' => 'adeserver_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}